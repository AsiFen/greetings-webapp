# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    services:
      postgres:
        image: postgres:latest
        env: 
          POSTGRES_USER: asifen
          POSTGRES_PASSWORD: mBANIlUToXYk6YQhwlqX3Um62XLUaZmx
          POSTGRES_DB: users_db_rymv
        ports:
        - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: npm install
    - name: create postgresql tables
      run: PGPASSWORD=mBANIlUToXYk6YQhwlqX3Um62XLUaZmx psql -h dpg-cj4l5os5kgrc739mq7l0-a.oregon-postgres.render.com -U asifen users_db_rymv
    - name: run tests with postgresql
      run: npm test
      env:
        DATABASE_URL: postgres://asifen:mBANIlUToXYk6YQhwlqX3Um62XLUaZmx@dpg-cj4l5os5kgrc739mq7l0-a.oregon-postgres.render.com/users_db_rymv
